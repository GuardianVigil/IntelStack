from typing import Dict
from .base import BasePlatform
import logging

logger = logging.getLogger(__name__)

class MalwareBazaarClient(BasePlatform):
    """Client for interacting with MalwareBazaar API."""

    def __init__(self, api_key: str):
        super().__init__(api_key)
        self.base_url = "https://mb-api.abuse.ch/api/v1"

    async def analyze_hash(self, file_hash: str) -> Dict:
        """Analyze a file hash using MalwareBazaar."""
        try:
            url = "https://mb-api.abuse.ch/api/v1/"
            data = {
                "query": "get_info",
                "hash": file_hash
            }
            
            async with self.session.post(url, data=data) as response:
                if response.status != 200:
                    raise Exception(f"Request failed: {response.status}, {await response.text()}")
                result = await response.json()
                return result

        except Exception as e:
            logger.error(f"Error in MalwareBazaar: {str(e)}")
            return {"error": str(e)}
